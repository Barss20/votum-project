import sqlite3
from aiogram import Bot, types
from aiogram.dispatcher import Dispatcher
from aiogram.utils import executor
from buttons import om1, gm1, bgm1
from config import TOKEN
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup

bot = Bot(token=TOKEN)
dp = Dispatcher(bot)



async def is_admin(user_id):
    connection = sqlite3.connect('/home/ubuntu/pythonProject1/VotumNGO/db.sqlite3')
    cursor = connection.cursor()
    cursor.execute('SELECT user_id FROM AdminTG_telegramadmin')
    results = cursor.fetchall()
    connection.close()
    user_ids = [result[0] for result in results]
    return user_id in user_ids


@dp.message_handler(commands=['start'])
async def process_start_command(message: types.Message):
    if await is_admin(message.from_user.id):
        keyboard = types.InlineKeyboardMarkup()
        keyboard.row(InlineKeyboardButton(text='Admin', callback_data='admin'))
        keyboard.row(InlineKeyboardButton(text="–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é", callback_data="bgm1"))
        await message.answer(
            "üëã–ü—Ä–∏–≤—ñ—Ç! –í–∞—Å –≤—ñ—Ç–∞—î –î–û–í–Ü–î–ù–ò–ö –¥–ª—è –í–ü–û –∑ –∞–∫—Ç—É–∞–ª—å–Ω–∏—Ö –ø–æ—Å–ª—É–≥ —É –º—ñ—Å—Ç—ñ –û–¥–µ—Å–∞ —Ç–∞ –û–¥–µ—Å—å–∫—ñ–π –æ–±–ª–∞—Å—Ç—ñ, —è –¥–æ–ø–æ–º–æ–∂—É —Ç–æ–±—ñ "
            "–∑–Ω–∞–π—Ç–∏ –ë–ï–ó–ö–û–®–¢–û–í–ù–£ –¥–æ–ø–æ–º–æ–≥—É –≤—ñ–¥ –¥–µ—Ä–∂–∞–≤–∏ —Ç–∞ –≥—É–º–∞–Ω—ñ—Ç–∞—Ä–Ω–∏—Ö "
            "–æ—Ä–≥–∞–Ω—ñ–∑–∞—Ü—ñ–π."
            "\n\n–ó–í–ï–†–¢–ê–Ñ–ú–û –£–í–ê–ì–£, –©–û –ó–ê–õ–ï–ñ–ù–û –í–Ü–î –°–ò–¢–£–ê–¶–Ü–á, –Ü–ù–§–û–†–ú–ê–¶–Ü–Ø –ú–û–ñ–ï –ó–ú–Ü–ù–Æ–í–ê–¢–ò–°–¨!!! "
            "\n–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å  º–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é º —â–æ–± –ø–æ–±–∞—á–∏—Ç–∏ –±–∞–∂–∞–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é üëá", reply_markup=keyboard)

    else:
        await message.answer(
            "üëã–ü—Ä–∏–≤—ñ—Ç! –í–∞—Å –≤—ñ—Ç–∞—î –î–û–í–Ü–î–ù–ò–ö –¥–ª—è –í–ü–û –∑ –∞–∫—Ç—É–∞–ª—å–Ω–∏—Ö –ø–æ—Å–ª—É–≥ —É –º—ñ—Å—Ç—ñ –û–¥–µ—Å–∞ —Ç–∞ –û–¥–µ—Å—å–∫—ñ–π –æ–±–ª–∞—Å—Ç—ñ, —è –¥–æ–ø–æ–º–æ–∂—É —Ç–æ–±—ñ "
            "–∑–Ω–∞–π—Ç–∏ –ë–ï–ó–ö–û–®–¢–û–í–ù–£ –¥–æ–ø–æ–º–æ–≥—É –≤—ñ–¥ –¥–µ—Ä–∂–∞–≤–∏ —Ç–∞ –≥—É–º–∞–Ω—ñ—Ç–∞—Ä–Ω–∏—Ö "
            "–æ—Ä–≥–∞–Ω—ñ–∑–∞—Ü—ñ–π."
            "\n\n–ó–í–ï–†–¢–ê–Ñ–ú–û –£–í–ê–ì–£, –©–û –ó–ê–õ–ï–ñ–ù–û –í–Ü–î –°–ò–¢–£–ê–¶–Ü–á, –Ü–ù–§–û–†–ú–ê–¶–Ü–Ø –ú–û–ñ–ï –ó–ú–Ü–ù–Æ–í–ê–¢–ò–°–¨!!! "
            "\n–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å  º–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é º —â–æ–± –ø–æ–±–∞—á–∏—Ç–∏ –±–∞–∂–∞–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é üëá", reply_markup=gm1)


@dp.callback_query_handler()
async def call_back_inline(call: types.CallbackQuery):
    connection = sqlite3.connect('/home/ubuntu/pythonProject1/VotumNGO/db.sqlite3')
    cursor = connection.cursor()
    if call.data == 'bgm1':
        await call.message.edit_text(text='–í–∏–±–µ—Ä—ñ—Ç—å –¥—ñ—é –Ω–∏–∂—á–µüëá', reply_markup=om1)
    if call.data == 'bom1':

        cursor.execute('SELECT content FROM AdminTG_text WHERE id = 1')
        result = cursor.fetchone()



        # –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç, –∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ –µ–≥–æ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é long_text
        if result:
            long_text = result[0]
        else:
            long_text = "–ó–Ω–∞—á–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"

        # –†–∞–∑–¥–µ–ª–∏—Ç–µ long_text –Ω–∞ —á–∞—Å—Ç–∏ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–∞–∂–¥—É—é —á–∞—Å—Ç—å –±–æ—Ç—É
        parts = [long_text[i:i + 4096] for i in range(0, len(long_text), 4096)]
        for part in parts:
            await call.message.edit_text(text=f"{part}", reply_markup=gm1)

    if call.data == "bom2":
        # –í—ã–ø–æ–ª–Ω–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        cursor.execute('SELECT content FROM AdminTG_text WHERE id = 2')
        result = cursor.fetchone()  # –ü–æ–ª—É—á–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–ø—Ä–æ—Å–∞

        # –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç, –∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ –µ–≥–æ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é long_text
        if result:
            long_text = result[0]
        else:
            long_text = "–ó–Ω–∞—á–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"

        # –†–∞–∑–¥–µ–ª–∏—Ç–µ long_text –Ω–∞ —á–∞—Å—Ç–∏ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–∞–∂–¥—É—é —á–∞—Å—Ç—å –±–æ—Ç—É
        parts = [long_text[i:i + 4096] for i in range(0, len(long_text), 4096)]
        for part in parts:
            await call.message.edit_text(text=f"{part}", reply_markup=gm1)

    if call.data == "bom3":
        # –í—ã–ø–æ–ª–Ω–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        cursor.execute('SELECT content FROM AdminTG_text WHERE id = 3')
        result = cursor.fetchone()  # –ü–æ–ª—É—á–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–ø—Ä–æ—Å–∞

        # –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç, –∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ –µ–≥–æ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é long_text
        if result:
            long_text = result[0]
        else:
            long_text = "–ó–Ω–∞—á–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"

        # –†–∞–∑–¥–µ–ª–∏—Ç–µ long_text –Ω–∞ —á–∞—Å—Ç–∏ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–∞–∂–¥—É—é —á–∞—Å—Ç—å –±–æ—Ç—É
        parts = [long_text[i:i + 4096] for i in range(0, len(long_text), 4096)]
        for part in parts:
            await call.message.edit_text(text=f"{part}", reply_markup=gm1)

    if call.data == "bom4":
        # –í—ã–ø–æ–ª–Ω–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        cursor.execute('SELECT content FROM AdminTG_text WHERE id = 4')
        result = cursor.fetchone()  # –ü–æ–ª—É—á–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–ø—Ä–æ—Å–∞

        # –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç, –∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ –µ–≥–æ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é long_text
        if result:
            long_text = result[0]
        else:
            long_text = "–ó–Ω–∞—á–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"

        # –†–∞–∑–¥–µ–ª–∏—Ç–µ long_text –Ω–∞ —á–∞—Å—Ç–∏ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–∞–∂–¥—É—é —á–∞—Å—Ç—å –±–æ—Ç—É
        parts = [long_text[i:i + 4096] for i in range(0, len(long_text), 4096)]
        for part in parts:
            await call.message.edit_text(text=f"{part}", reply_markup=gm1)

    if call.data == "bom5":
        # –í—ã–ø–æ–ª–Ω–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        cursor.execute('SELECT content FROM AdminTG_text WHERE id = 5')
        result = cursor.fetchone()  # –ü–æ–ª—É—á–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–ø—Ä–æ—Å–∞

        # –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç, –∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ –µ–≥–æ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é long_text
        if result:
            long_text = result[0]
        else:
            long_text = "–ó–Ω–∞—á–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"

        # –†–∞–∑–¥–µ–ª–∏—Ç–µ long_text –Ω–∞ —á–∞—Å—Ç–∏ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–∞–∂–¥—É—é —á–∞—Å—Ç—å –±–æ—Ç—É
        parts = [long_text[i:i + 4096] for i in range(0, len(long_text), 4096)]
        for part in parts:
            await call.message.edit_text(text=f"{part}", reply_markup=gm1)

    if call.data == "bom6":
        # –í—ã–ø–æ–ª–Ω–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        cursor.execute('SELECT content FROM AdminTG_text WHERE id = 6')
        result = cursor.fetchone()  # –ü–æ–ª—É—á–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–ø—Ä–æ—Å–∞

        # –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç, –∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ –µ–≥–æ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é long_text
        if result:
            long_text = result[0]
        else:
            long_text = "–ó–Ω–∞—á–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"

        # –†–∞–∑–¥–µ–ª–∏—Ç–µ long_text –Ω–∞ —á–∞—Å—Ç–∏ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–∞–∂–¥—É—é —á–∞—Å—Ç—å –±–æ—Ç—É
        parts = [long_text[i:i + 4096] for i in range(0, len(long_text), 4096)]
        for part in parts:
            await call.message.edit_text(text=f"{part}", reply_markup=gm1)

    if call.data == "bom7":
        # –í—ã–ø–æ–ª–Ω–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        cursor.execute('SELECT content FROM AdminTG_text WHERE id = 7')
        result = cursor.fetchone()  # –ü–æ–ª—É—á–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–ø—Ä–æ—Å–∞

        # –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç, –∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ –µ–≥–æ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é long_text
        if result:
            long_text = result[0]
        else:
            long_text = "–ó–Ω–∞—á–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"

        # –†–∞–∑–¥–µ–ª–∏—Ç–µ long_text –Ω–∞ —á–∞—Å—Ç–∏ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–∞–∂–¥—É—é —á–∞—Å—Ç—å –±–æ—Ç—É
        parts = [long_text[i:i + 4096] for i in range(0, len(long_text), 4096)]
        for part in parts:
            await call.message.edit_text(text=f"{part}", reply_markup=gm1)

    if call.data == "bom8":
        # –í—ã–ø–æ–ª–Ω–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        cursor.execute('SELECT content FROM AdminTG_text WHERE id = 8')
        result = cursor.fetchone()  # –ü–æ–ª—É—á–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–ø—Ä–æ—Å–∞

        # –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç, –∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ –µ–≥–æ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é long_text
        if result:
            long_text = result[0]
        else:
            long_text = "–ó–Ω–∞—á–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"

        # –†–∞–∑–¥–µ–ª–∏—Ç–µ long_text –Ω–∞ —á–∞—Å—Ç–∏ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–∞–∂–¥—É—é —á–∞—Å—Ç—å –±–æ—Ç—É
        parts = [long_text[i:i + 4096] for i in range(0, len(long_text), 4096)]
        for part in parts:
            await call.message.edit_text(text=f"{part}", reply_markup=gm1)

    if call.data == "bom9":
        # –í—ã–ø–æ–ª–Ω–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        cursor.execute('SELECT content FROM AdminTG_text WHERE id = 9')
        result = cursor.fetchone()  # –ü–æ–ª—É—á–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–ø—Ä–æ—Å–∞

        # –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç, –∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ –µ–≥–æ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é long_text
        if result:
            long_text = result[0]
        else:
            long_text = "–ó–Ω–∞—á–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"

        # –†–∞–∑–¥–µ–ª–∏—Ç–µ long_text –Ω–∞ —á–∞—Å—Ç–∏ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–∞–∂–¥—É—é —á–∞—Å—Ç—å –±–æ—Ç—É
        parts = [long_text[i:i + 4096] for i in range(0, len(long_text), 4096)]
        for part in parts:
            await call.message.edit_text(text=f"{part}", reply_markup=gm1)

    if call.data == "bom10":
        # –í—ã–ø–æ–ª–Ω–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        cursor.execute('SELECT content FROM AdminTG_text WHERE id = 10')
        result = cursor.fetchone()  # –ü–æ–ª—É—á–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–ø—Ä–æ—Å–∞

        # –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç, –∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ –µ–≥–æ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é long_text
        if result:
            long_text = result[0]
        else:
            long_text = "–ó–Ω–∞—á–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"

        # –†–∞–∑–¥–µ–ª–∏—Ç–µ long_text –Ω–∞ —á–∞—Å—Ç–∏ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–∞–∂–¥—É—é —á–∞—Å—Ç—å –±–æ—Ç—É
        parts = [long_text[i:i + 4096] for i in range(0, len(long_text), 4096)]
        for part in parts:
            await call.message.edit_text(text=f"{part}", reply_markup=gm1)

    if call.data == "bom11":
        # –í—ã–ø–æ–ª–Ω–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        cursor.execute('SELECT content FROM AdminTG_text WHERE title = 11')
        result = cursor.fetchone()  # –ü–æ–ª—É—á–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–ø—Ä–æ—Å–∞

        # –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç, –∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ –µ–≥–æ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é long_text
        if result:
            long_text = result[0]
        else:
            long_text = "–ó–Ω–∞—á–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"

        # –†–∞–∑–¥–µ–ª–∏—Ç–µ long_text –Ω–∞ —á–∞—Å—Ç–∏ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–∞–∂–¥—É—é —á–∞—Å—Ç—å –±–æ—Ç—É
        parts = [long_text[i:i + 4096] for i in range(0, len(long_text), 4096)]
        for part in parts:
            await call.message.edit_text(text=f"{part}", reply_markup=gm1)

    if call.data == "bom12":
        # –í—ã–ø–æ–ª–Ω–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        cursor.execute('SELECT content FROM AdminTG_text WHERE id = 12')
        result = cursor.fetchone()  # –ü–æ–ª—É—á–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–ø—Ä–æ—Å–∞

        # –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç, –∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ –µ–≥–æ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é long_text
        if result:
            long_text = result[0]
        else:
            long_text = "–ó–Ω–∞—á–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"

        # –†–∞–∑–¥–µ–ª–∏—Ç–µ long_text –Ω–∞ —á–∞—Å—Ç–∏ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–∞–∂–¥—É—é —á–∞—Å—Ç—å –±–æ—Ç—É
        parts = [long_text[i:i + 4096] for i in range(0, len(long_text), 4096)]
        for part in parts:
            await call.message.edit_text(text=f"{part}", reply_markup=gm1)

    if call.data == "bom13":
        # –í—ã–ø–æ–ª–Ω–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        cursor.execute('SELECT content FROM AdminTG_text WHERE id = 13')
        result = cursor.fetchone()  # –ü–æ–ª—É—á–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–ø—Ä–æ—Å–∞

        # –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç, –∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ –µ–≥–æ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é long_text
        if result:
            long_text = result[0]
        else:
            long_text = "–ó–Ω–∞—á–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"

        # –†–∞–∑–¥–µ–ª–∏—Ç–µ long_text –Ω–∞ —á–∞—Å—Ç–∏ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–∞–∂–¥—É—é —á–∞—Å—Ç—å –±–æ—Ç—É
        parts = [long_text[i:i + 4096] for i in range(0, len(long_text), 4096)]
        for part in parts:
            await call.message.edit_text(text=f"{part}", reply_markup=gm1)

    if call.data == "bom14":
        # –í—ã–ø–æ–ª–Ω–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        cursor.execute('SELECT content FROM AdminTG_text WHERE id = 14')
        result = cursor.fetchone()  # –ü–æ–ª—É—á–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–ø—Ä–æ—Å–∞

        # –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç, –∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ –µ–≥–æ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é long_text
        if result:
            long_text = result[0]
        else:
            long_text = "–ó–Ω–∞—á–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"

        # –†–∞–∑–¥–µ–ª–∏—Ç–µ long_text –Ω–∞ —á–∞—Å—Ç–∏ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–∞–∂–¥—É—é —á–∞—Å—Ç—å –±–æ—Ç—É
        parts = [long_text[i:i + 4096] for i in range(0, len(long_text), 4096)]
        for part in parts:
            await call.message.edit_text(text=f"{part}", reply_markup=gm1)

    if call.data == "bom15":
        # –í—ã–ø–æ–ª–Ω–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        cursor.execute('SELECT content FROM AdminTG_text WHERE id = 15')
        result = cursor.fetchone()  # –ü–æ–ª—É—á–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–ø—Ä–æ—Å–∞

        # –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç, –∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ –µ–≥–æ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é long_text
        if result:
            long_text = result[0]
        else:
            long_text = "–ó–Ω–∞—á–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"

        # –†–∞–∑–¥–µ–ª–∏—Ç–µ long_text –Ω–∞ —á–∞—Å—Ç–∏ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–∞–∂–¥—É—é —á–∞—Å—Ç—å –±–æ—Ç—É
        parts = [long_text[i:i + 4096] for i in range(0, len(long_text), 4096)]
        for part in parts:
            await call.message.edit_text(text=f"{part}", reply_markup=gm1)

    if call.data == "bom16":
        # –í—ã–ø–æ–ª–Ω–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        cursor.execute('SELECT content FROM AdminTG_text WHERE id = 16')
        result = cursor.fetchone()  # –ü–æ–ª—É—á–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–ø—Ä–æ—Å–∞

        # –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç, –∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ –µ–≥–æ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é long_text
        if result:
            long_text = result[0]
        else:
            long_text = "–ó–Ω–∞—á–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"

        # –†–∞–∑–¥–µ–ª–∏—Ç–µ long_text –Ω–∞ —á–∞—Å—Ç–∏ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–∞–∂–¥—É—é —á–∞—Å—Ç—å –±–æ—Ç—É
        parts = [long_text[i:i + 4096] for i in range(0, len(long_text), 4096)]
        for part in parts:
            await call.message.edit_text(text=f"{part}", reply_markup=gm1)

    if call.data == "bom17":
        # –í—ã–ø–æ–ª–Ω–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        cursor.execute('SELECT content FROM AdminTG_text WHERE id = 17')
        result = cursor.fetchone()  # –ü–æ–ª—É—á–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–ø—Ä–æ—Å–∞

        # –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç, –∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ –µ–≥–æ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é long_text
        if result:
            long_text = result[0]
        else:
            long_text = "–ó–Ω–∞—á–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"

        # –†–∞–∑–¥–µ–ª–∏—Ç–µ long_text –Ω–∞ —á–∞—Å—Ç–∏ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–∞–∂–¥—É—é —á–∞—Å—Ç—å –±–æ—Ç—É
        parts = [long_text[i:i + 4096] for i in range(0, len(long_text), 4096)]
        for part in parts:
            await call.message.edit_text(text=f"{part}", reply_markup=gm1)

    if call.data == "admin":
        keyboard = InlineKeyboardMarkup().add(bgm1)
        if await is_admin(call.from_user.id):

            admin_url = 'http://130.61.186.30/admin'

            await call.message.edit_text(f"–ê–¥–º–∏–Ω–∫–∞ –∑–∞–ø—É—â–µ–Ω–∞!\nURL: {admin_url}", reply_markup=keyboard)

    cursor.close()
    connection.close()


@dp.message_handler(commands=['admin'])
async def process_start_command(message: types.Message):
    if await is_admin(message.from_user.id):
        admin_url = "http://130.61.186.30/admin"
        await message.answer(text=f"–ê–¥–º–∏–Ω–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ –∞–¥—Ä–µ—Å—É: \n{admin_url}")

@dp.message_handler(commands=['id'])
async def process_start_command(message: types.Message):
    await message.answer(text=f'{message.from_user.id}', reply_markup=gm1)

if __name__ == '__main__':
    executor.start_polling(dp)